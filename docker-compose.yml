version: "3"

services:
  redis_miro:
    image: redis:6.2.1
    container_name: redis_miro_container
    networks:
      - miro_net
    env_file:
      - .env
    ports:
      - 6380:6380
    command: redis-server --port 6380

  postgres_miro:
    networks:
      - miro_net
    image: postgres:13.1
    container_name: postgres_miro_container
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}
    environment:
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_DB: ${TYPEORM_DATABASE}
    volumes:
      - ${DB_DATA_DIR}:/var/lib/postgresql/data
    env_file:
      - .env

  miro_table_server:
    environment:
      TYPEORM_CONNECTION: ${TYPEORM_CONNECTION}
      TYPEORM_HOST: ${TYPEORM_HOST}
      TYPEORM_USERNAME: ${TYPEORM_USERNAME}
      TYPEORM_PASSWORD: ${TYPEORM_PASSWORD}
      TYPEORM_DATABASE: ${TYPEORM_DATABASE}
      TYPEORM_PORT: ${TYPEORM_PORT}
      TYPEORM_ENTITIES: ${TYPEORM_ENTITIES}
      TYPEORM_SYNCHRONIZE: ${TYPEORM_SYNCHRONIZE}
      TYPEORM_LOGGING: ${TYPEORM_LOGGING}
    env_file:
      - .env # Note: other names won't work unless you change the docker-compose command itself
    networks:
      - miro_net
    build:
      context: ../
      dockerfile: ./server/Dockerfile
    # volumes:
    #   - ./server/:/app/
    #   - ./server/node_modules:/app/node_modules
    depends_on:
      - postgres_miro
      - redis_miro
    image: miro_table_server:0.0.1
    container_name: miro_table_server_container
    command: yarn run start:dev
    ports:
      - 5001:5001 # for debug purposes

networks:
  miro_net:
    name: miro_net
